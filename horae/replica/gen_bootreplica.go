// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package replica

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (b BootReplica) MarshalJSON() ([]byte, error) {
	type BootReplica struct {
		Address   common.Address `json:"address"`
		PublicKey string         `json:"publicKey"`
	}
	var enc BootReplica
	enc.Address = b.Address
	enc.PublicKey = b.PublicKey
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (b *BootReplica) UnmarshalJSON(input []byte) error {
	type BootReplica struct {
		Address   *common.Address `json:"address"`
		PublicKey *string         `json:"publicKey"`
	}
	var dec BootReplica
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Address != nil {
		b.Address = *dec.Address
	}
	if dec.PublicKey != nil {
		b.PublicKey = *dec.PublicKey
	}
	return nil
}
